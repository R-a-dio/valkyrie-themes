{{define "content"}}
<div class="container" hx-ext="sse" sse-connect="/admin/booth/sse">
    <div class="section">
        <div class="fixed-grid has-10-cols">
            <div class="grid">
                <div class="cell fixed-grid has-8-cols is-col-span-8">
                    <div class="grid">
                        <div class="cell is-flex is-col-span-4 is-row-span-1 is-size-3 is-family-code is-justify-content-center is-align-self-center m-0" style="font-variant:ordinal;">STREAMBOOTH</div>
                        <div class="cell is-flex box is-col-span-4 is-row-span-1 is-justify-content-center is-align-self-center has-background-radio-secondary-1 has-text-weight-light m-0 py-2">USERNAME: {{.User.Username}}</div>
                        <div class="cell is-col-span-8 is-row-span-1 m-3">
                            <div sse-swap="proxy-status" class="columns is-size-7 is-family-code ">
                            {{template "proxy-status" .ProxyStatus}}
                            </div>
                        </div>
                        {{template "set-thread" .ThreadInfo}}
                        <div class="cell is-flex is-flex-direction-column is-col-span-8 is-row-span-3">
                            <div class="box is-flex-1 has-background-radio-secondary-1">
                                <div class="tabs is-boxed">
                                    <ul>
                                        <li class="is-active"><a class="tab-button" data-target="streaming-info" onclick="switchTab(this)">Stream Settings</a></li>
                                        <li><a class="tab-button" data-target="irc-info" onclick="switchTab(this)">IRC Commands</a></li>
                                    </ul>
                                </div>
                                <div id="streaming-info" class="grid">
                                    <div class="content cell is-col-span-8">
                                        <p>Sample Rate MUST be 44100 or 44.1kHz.</p>
                                        <p>
                                        If you are using Loopstream and it is yelling at you, either fix your audio devices or ignore the warning.
                                        The warning is (was?) overblown and the audio is not actually low-quality.
                                        </p>
                                        <p>Codec must be MP3.</p>
                                        <p>Bitrate should be 192kbps. No lower, preferrably not higher for consistency.</p>
                                        <dl>
                                            <dt>If you are using Loopstream, set up audio routing if possible.</dt>
                                            <dd>This does require two usable audio output devices. If you only have one, and don't feel comfortable finding and setting up a Virtual Audio Cable program, don't bother.</dd>
                                            <dd>You can test your audio setup by setting the address field in the Server tab of the settings to blank.</dd>
                                            <dd>Doing so will fake a connection when you press Connect on the main window. Don't forget to re-set the address to the stream server after.</dd>
                                        </dl>
                                    </div>
                                </div>
                                <div id="irc-info" class="grid is-hidden">
                                    <div class="content cell is-col-span-8">
                                        <p>Commands should all be in the main IRC channel</p>
                                        <dl>
                                            <dt>Use <code>.kill</code> to kill Hanyuu-sama</dt>
                                            <dd>Only needed if Hanyuu is the current DJ.</dd>
                                            <dd>Do this with at least 15 seconds left in the current song to be safe, but you can do this as early as 5 seconds into a song.</dd>
                                            <dd>You can keep an eye on how much time is left in a song on the site.</dd>
                                            <dd>Connect when there are 30 seconds left in the current song but DO NOT start your music.</dd>
                                            <dd>Start your music when the current song ends.</dd>
                                        </dl>
                                        <dl>
                                            <dt>Use of <code>.dj</code> is no longer needed</dt>
                                            <dd>You will be set as DJ when you go live on the stream automatically</dd>
                                            <dd><strong>Still use the below command to set Hanyuu-sama after you're done.</strong></dd>
                                        </dl>
                                        <dl>
                                            <dt>Use <code>.dj hanyuu</code> to set Hanyuu-sama as DJ when you are done streaming.</dt>
                                            <dd>You can do this before you disconnect, as long as there is less than one minute left in your set.</dd>
                                        </dl>
                                        <dl>
                                            <dt>Use <tag class="is-success">.thread [thread]</tag> to set the thread, with <tag class="is-success">[thread]</tag> changed to what you want to set.</dt>
                                            <dd>Example: <tag class="is-success">.thread fake.imageboard.net/a/8169743</tag></dd>
                                            <dd>Using <tag class="is-success">.thread none</tag> unsets the thread</dd>
                                            <dd>You can also set the thread on this page</dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="cell fixed-grid has-2-cols is-col-span-2">
                    <div class="grid">
                        <div class="cell is-flex is-col-span-2 is-row-span-3 is-justify-content-center is-align-self-center has-text-weight-light m-0 p-0">
                            <div class="columns is-flex-direction-column is-fullwidth">
                                {{template "streamer" .Status.StreamUser}}
                            </div>
                        </div>
                        <div sse-swap="status" class="cell is-flex box is-col-span-2 is-row-span-1 is-justify-content-center is-align-self-center has-background-radio-secondary-1 has-text-weight-light m-0 py-2">
                            {{block "status" Status}}
                            {{$progress := .SongInfo.Start | Since}}
                            <div class="progress-container is-fullwidth">
                                <div class="progress-wrapper">
                                    <progress id="current-song-progress" class="progress is-large" value="{{$progress | ToSecond}}" max="{{.Song.Length.Seconds}}"></progress>
                                    <div class="progress-text">{{with .}}<div><span id="progress-current" data-start="{{.SongInfo.Start.UnixMilli}}">{{$progress | MediaDuration}}</span> / <span id="progress-max">{{.Song.Length | MediaDuration}}</span></div>{{end}}</div>
                                </div>
                            </div>
                            {{end}}
                        </div>
                        {{template "stop-streamer" .StreamerInfo}}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{{end}}

{{define "streamer"}}
<div sse-swap="streamer" hx-swap="outerHTML" class="column">
    {{with .}}
    <div class="card-image">
        <figure class="image is-square">
            <img src="/api/dj-image/{{.DJ.Image}}"/>
        </figure>
    </div>
    <div class="cell is-col-span-2 is-row-span-1">
        <div id="dj-name" class="column has-text-centered has-background-radio-secondary-1">Current DJ: {{.DJ.Name}}</div>
    </div>
    {{else}}
    <div class="cell is-col-span-2 is-row-span-1">
        <div id="dj-name" class="column has-text-centered has-background-radio-secondary-1">Current DJ: NOBODY</div>
    </div>
    {{end}}
</div>
{{end}}

{{define "stop-streamer"}}
<div id="stop-streamer" sse-swap="stop-streamer" hx-swap="outerHTML" class="cell is-col-span-2 is-row-span-1 m-0 p-0">
    <div class="columns has-text-centered is-flex-direction-column has-background-radio-secondary-1 m-0 p-0">
    {{if not Status.StreamUser}}
        <p class="column p-4 is-warning">Nobody is currently streaming</p>
    {{else if .UserIsLive}}
        <p class="column p-4 is-success">You are currently streaming</p>
    {{else if .CurrentIsRobot}}
        <p class="column p-4">This kills the Hanyuu. You must connect within <b style="color:lightcoral">{{.ConnectTimeout}}</b> after the song ends.</p>
        <form hx-post="{{.FormAction}}" hx-target="#stop-streamer" hx-swap="outerHTML">
            {{.CSRFTokenInput}}
            <button type="submit" class="button is-align-self-stretch m-4 is-warning" {{if not .AllowedToKill}}disabled{{end}}>Kill Hanyuu</button>
        </form>
    {{else}}
        <p class="column p-4">Another DJ is currently streaming, communicate with them.</p>
    {{end}}
    </div>
</div>
{{end}}

{{define "set-thread"}}
<div id="set-thread" sse-swap="thread" hx-swap="outerHTML" class="cell box is-col-span-8 is-row-span-2 has-background-radio-secondary-1 m-0 p-0">
    <div class="columns has-text-centered is-flex-direction-column p-4">
        {{if .AllowedToThread}}
        <p class="column">This is the current thread, you can update it here or set an image by prepending 'image:' to an URL</p>
        {{else}}
        <p class="column">You are currently not allowed to set the thread, if you fucked up request guest auth again in IRC</p>
        {{end}}
        <form hx-post="{{.FormAction}}" hx-target="#set-thread" hx-swap="outerHTML" class="is-align-self-stretch px-3">
            {{.CSRFTokenInput}}
            <div class="field has-addons">
                <div class="control is-expanded">
                    <input name="thread" class="input has-text-centered" type="text" placeholder="no thread set currently" value="{{if .Thread | IsValidThread}}{{.Thread}}{{end}}">
                </div>
                <div class="control">
                    <button type="submit" class="button booth-button is-align-self-stretch is-info" {{if not .AllowedToThread}}disabled{{end}}>Update</button>
                </div>
            </div>
        </form>
    </div>
</div>
{{end}}

{{define "proxy-status"}}
    {{range .Connections}}
        <div class="column is-narrow is-flex is-justify-content-center is-align-items-center has-background-radio-secondary-1 mb-0">
            {{if .IsLive}}
                {{template "booth-circle" safeCSS "hsl(121, 40%, 40%)"}}<div class="ml-2">LIVE</div>
            {{else}}
                {{template "booth-circle" safeCSS "hsl(232, 40%, 40%)"}}<div class="ml-2">CONNECTED</div>
            {{end}}<div class="ml-2">at <a href="{{.MountName}}">{{.MountName}}</a></div>
        </div>
        <div class="column is-narrow box is-flex is-justify-content-center is-align-items-center has-background-radio-secondary-1 mb-0 ml-3">
            {{template "booth-circle" safeCSS "hsl(121, 40%, 40%)"}}<div class="ml-2">Connected for <time data-type="small" datetime="{{.Start.Unix}}">{{.Start | Since | HumanDuration}}</time></div>
        </div>
        <div class="column box is-flex is-align-items-center has-background-radio-secondary-1 mb-0 ml-3" style="white-space:nowrap;overflow-x:auto;scrollbar-width:none;">
        {{with .Metadata}}
            {{template "booth-circle" safeCSS "hsl(121, 40%, 40%)"}}<div class="ml-2" style="overflow:auto;scrollbar-width:none;"><div>{{.}}</div></div>
        {{else}}
            {{template "booth-circle" safeCSS "hsl(232, 40%, 40%)"}}<div class="ml-2" style="overflow:auto;scrollbar-width:none;"><div style="float:left;">[NO METADATA]</div></div>
        {{end}}
        </div>
    {{else}}
        <div class="column is-narrow is-flex is-justify-content-center is-align-items-center has-background-radio-secondary-1 mb-0">
            {{template "booth-circle" safeCSS "hsl(0, 40%, 40%)"}}<div class="ml-2">Stream: NOT CONNECTED</div>
        </div>
        <div class="column is-narrow box is-flex is-justify-content-center is-align-items-center has-background-radio-secondary-1 mb-0 ml-3">
            {{template "booth-circle" safeCSS "hsl(0, 40%, 40%)"}}<div class="ml-2">Uptime: NOT CONNECTED</div>
        </div>
        <div class="column box is-flex is-align-items-center has-background-radio-secondary-1 mb-0 ml-3" style="white-space:nowrap;overflow-x:auto;scrollbar-width:none;">
            {{template "booth-circle" safeCSS "hsl(0, 40%, 40%)"}}<div class="ml-2" style="overflow:auto;scrollbar-width:none;"><div style="float:left;">NOT CONNECTED</div></div>
        </div>
    {{end}}
{{end}}
{{define "booth-circle" -}}
<svg class="svg-icon" style="color: {{.}};" viewBox="0 0 24 24"><use href="/assets/default-light/svg/sprites.svg#circle"></use></svg>
{{- end}}